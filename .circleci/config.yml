
# see orb options at
# https://github.com/cypress-io/circleci-orb
version: 2.1
orbs:
  cypress: cypress-io/cypress@1
  gcp-gke: circleci/gcp-gke@1.0.4
  gcr: circleci/gcp-gcr@0.7.1
  
executors:
  latest:
    docker:
      - image: cypress/browsers:node12.13.0-chrome78-ff70

commands:
  save-partial-coverage-report:
    description: |
      Saves a single possibly partial coverage report by adding it to the
      workspace. This way different CircleCI jobs can run parts of the tests
      and save their results to be merged later.
    parameters:
      coverage-filename:
        type: string
        default: coverage/coverage-final.json
        description: |
          Path to the final coverage JSON file produced by "nyc" tool.
          Typically called "coverage/coverage-final.json"
      label:
        type: string
        default: default
        description: |
          Human name for the coverage file. For example, when saving both Cypress
          and Jest coverage file, use "cypress" and "jest" to have distinct filenames.
    steps:
      # do not crash if the coverage is not found
      # because a particular CI job might not have any tests to run
      # producing no coverage.
      - run: mkdir coverage-part || true
      - run: touch coverage-part/.placeholder || true
      # use unique job id to avoid accidentally overwriting coverage file
      # and in case the build is parallel, use node index too
      - run: cp <<parameters.coverage-filename>> coverage-part/coverage-<<parameters.label>>-$CIRCLE_WORKFLOW_JOB_ID-index-$CIRCLE_NODE_INDEX.json || true
      - run: ls -la coverage-part
      - persist_to_workspace:
          root: ~/
          paths:
            # note that the current folder is "project"
            # so we need to save the full path correctly
            # otherwise the files will not be restored in the expected location
            - 'project/coverage-part/*'
  merge-coverage-reports:
    description: |
      Merges individual code coverage files using "nyc" tool
      https://github.com/istanbuljs/nyc.
      All individual files should be in the folder "coverage-part"
    steps:
      - run: ls -la .
      - run: ls -la coverage-part || true
      - run: npx nyc merge coverage-part
      - run: mkdir .nyc_output || true
      # storing the combined report in ".nyc_output/out.json"
      # allows other NYC commands to find it right away
      - run: mv coverage.json .nyc_output/out.json
      - run: ls -la .nyc_output

jobs:
  merge-coverage:
    description: Merges individual code coverage files and sends combined data to Coveralls.io
    executor: cypress/base-10
    steps:
      - attach_workspace:
          at: ~/
      - merge-coverage-reports
      - run:
          name: generate coverage report
          command: |
            npx nyc report \
              --reporter lcov --reporter text-summary \
              --report-dir coverage
      - store_artifacts:
          path: coverage
      - run:
          command: npm run coveralls || true

  delivery-client:
    machine: true
    steps:
        - checkout
        - run: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
        - run: cd client && docker build -t juanchojbarroso/realworld-client:latest .
        - run: docker push juanchojbarroso/realworld-client:latest

  delivery-server:
    machine: true
    steps:
        - checkout
        - run: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
        - run: cd server && docker build -t realworld-server:latest .
        - run: docker push juanchojbarroso/realworld-server:latest

  deploy:
    description: Deploy new version of realword app
    machine: true
    steps:
      - gcp-gke/install
      - gcp-gke/update-kubeconfig-with-credentials:
          cluster: realworld-cluster
          perform-login: true
      - gcp-gke/rollout-image:
          cluster:  realworld-cluster
          deployment: realworld-client
          container: realworld-client
          image: juanchojbarroso/realworld-client
      - gcp-gke/rollout-image:
          cluster:  realworld-cluster
          deployment: realworld-server
          container: realworld-server
          image: juanchojbarroso/realworld-server

workflows:
  build:
    jobs:
      - cypress/install:
          executor: latest
          pre-steps:
            - run: npm config set unsafe-perm true

      - cypress/run:
          requires:
            - cypress/install
          executor: latest
          parallel: true
          parallelism: 2
          no-workspace: true
          start: npm run start:coverage
          wait-on: http://localhost:4100
          # record: true
          post-steps:
            - store_artifacts:
                path: coverage
            # if this machine had no tests to run
            # there will be no coverage report
            - run: npx nyc report --reporter=text || true
            - save-partial-coverage-report:
                label: e2e

      - merge-coverage:
          requires:
            - cypress/run

      - delivery-client
      - delivery-server

      - deploy:
          requires:
            - delivery-client
            - delivery-server